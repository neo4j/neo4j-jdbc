<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2023-2025 "Neo4j,"
    Neo4j Sweden AB [https://neo4j.com]

    This file is part of Neo4j.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.neo4j</groupId>
	<artifactId>neo4j-jdbc-parent</artifactId>
	<version>6.5.1-SNAPSHOT</version>

	<packaging>pom</packaging>
	<name>Neo4j JDBC Driver</name>
	<description>A JDBC 4.3 compliant JDBC driver for Neo4j.</description>
	<url>https://github.com/neo4j/neo4j-jdbc</url>

	<inceptionYear>2023</inceptionYear>
	<organization>
		<name>Neo4j</name>
		<url>https://neo4j.com</url>
	</organization>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>msimons</id>
			<name>Michael Simons</name>
			<email>michael.simons at neo4j.com</email>
			<organization>Neo4j</organization>
			<organizationUrl>https://neo4j.com</organizationUrl>
			<roles>
				<role>Project Lead</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>dtverdiakov</id>
			<name>Dmitriy Tverdiakov</name>
			<email>dmitriy.tverdiakov at neo4j.com</email>
			<organization>Neo4j</organization>
			<organizationUrl>https://neo4j.com</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
		<developer>
			<id>cwatson</id>
			<name>Conor Watson</name>
			<email>conor.watson at neo4j.com</email>
			<organization>Neo4j</organization>
			<organizationUrl>https://neo4j.com</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
		<developer>
			<id>leder</id>
			<name>Lukas Eder</name>
			<email>lukas.eder at gmail.com</email>
			<organization>jOOQ</organization>
			<organizationUrl>https://jooq.org</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>mhunger</id>
			<name>Michael Hunger</name>
			<email>michael.hunger at neo4j.com</email>
			<organization>Neo4j</organization>
			<organizationUrl>https://neo4j.com</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<modules>
		<module>neo4j-jdbc-bom</module>
		<module>neo4j-jdbc-translator</module>
		<module>neo4j-jdbc-tracing</module>
		<module>neo4j-jdbc</module>
		<module>neo4j-jdbc-it</module>
		<module>bundles/neo4j-jdbc-bundle</module>
		<module>bundles/neo4j-jdbc-full-bundle</module>
		<module>bundles/neo4j-jdbc-text2cypher-bundle</module>
		<module>docs</module>
		<module>dist</module>
		<module>benchkit</module>
	</modules>

	<scm>
		<connection>scm:git:git@github.com:neo4j/neo4j-jdbc.git</connection>
		<developerConnection>scm:git:git@github.com:neo4j/neo4j-jdbc.git</developerConnection>
		<tag>HEAD</tag>
		<url>https://github.com/neo4j/neo4j-jdbc</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/neo4j/neo4j-jdbc/issues</url>
	</issueManagement>

	<properties>
		<aggregate.report.dir>neo4j-jdbc-test-results/target/site/jacoco-aggregate/jacoco.xml</aggregate.report.dir>
		<archunit.version>1.4.1</archunit.version>
		<asciidoctor-maven-plugin.version>3.2.0</asciidoctor-maven-plugin.version>
		<asciidoctorj.pdf.version>2.3.19</asciidoctorj.pdf.version>
		<asciidoctorj.version>3.0.0</asciidoctorj.version>
		<assertj.version>3.27.3</assertj.version>
		<build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
		<checkstyle.version>10.24.0</checkstyle.version>
		<covered-ratio-complexity>0.05</covered-ratio-complexity>
		<covered-ratio-instructions>0.05</covered-ratio-instructions>
		<cyclonedx-maven-plugin.version>2.9.1</cyclonedx-maven-plugin.version>
		<cypher-v5-antlr-parser.version>5.26.6</cypher-v5-antlr-parser.version>
		<docker-maven-plugin.version>0.46.0</docker-maven-plugin.version>
		<dotenv-java.version>3.2.0</dotenv-java.version>
		<duplicate-finder-maven-plugin.version>2.0.1</duplicate-finder-maven-plugin.version>
		<exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
		<flatten-maven-plugin.version>1.7.0</flatten-maven-plugin.version>
		<git-commit-id-maven-plugin.version>9.0.2</git-commit-id-maven-plugin.version>
		<jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
		<jackson.version>2.19.0</jackson.version>
		<jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
		<japicmp-maven-plugin.version>0.23.1</japicmp-maven-plugin.version>
		<java.version>17</java.version>
		<jaxb-api.version>4.0.2</jaxb-api.version>
		<jdbi3.version>3.49.4</jdbi3.version>
		<jooq.version>3.19.23</jooq.version>
		<jreleaser-maven-plugin.version>1.18.0</jreleaser-maven-plugin.version>
		<junit-jupiter.version>5.12.2</junit-jupiter.version>
		<kotlin-stdlib-jdk8.version>2.1.21</kotlin-stdlib-jdk8.version>
		<langchain4j.version>1.0.1</langchain4j.version>
		<license-maven-plugin.version>5.0.0</license-maven-plugin.version>
		<mainArtifactId>neo4j-jdbc</mainArtifactId>
		<maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
		<maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
		<maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
		<maven-deploy-plugin.version>3.1.4</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
		<maven-failsafe-plugin.version>3.5.3</maven-failsafe-plugin.version>
		<maven-install-plugin.version>3.1.4</maven-install-plugin.version>
		<maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.11.2</maven-javadoc-plugin.version>
		<maven-release-plugin.version>3.1.1</maven-release-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
		<maven-source-plugin.version>3.3.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>3.5.3</maven-surefire-plugin.version>
		<maven.compiler.release>${java.version}</maven.compiler.release>
		<maven.version>3.9.4</maven.version>
		<micrometer-tracing.version>1.5.0</micrometer-tracing.version>
		<micrometer.version>1.15.0</micrometer.version>
		<mockito.version>5.18.0</mockito.version>
		<moditect-maven-plugin.version>1.2.2.Final</moditect-maven-plugin.version>
		<native-maven-plugin.version>0.10.6</native-maven-plugin.version>
		<neo4j-bolt-connection.version>3.0.0</neo4j-bolt-connection.version>
		<neo4j-cypher-dsl.version>2024.6.1</neo4j-cypher-dsl.version>
		<neo4j-jdbc.previous.version>6.5.0</neo4j-jdbc.previous.version>
		<neo4j.image>neo4j:${neo4j.version}</neo4j.image>
		<neo4j.version>5.26.5</neo4j.version>
		<netty.version>4.1.121.Final</netty.version>
		<openapi-generator-maven-plugin.version>7.13.0</openapi-generator-maven-plugin.version>
		<opencsv.version>5.11</opencsv.version>
		<openpojo.version>0.9.1</openpojo.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<quarkus.platform.version>3.22.3</quarkus.platform.version>
		<skipITs>${skipTests}</skipITs>
		<skipTests>false</skipTests>
		<skipUTs>${skipTests}</skipUTs>
		<slf4j.version>2.0.17</slf4j.version>
		<sonar-maven-plugin.version>5.1.0.4751</sonar-maven-plugin.version>
		<sortpom-maven-plugin.version>4.0.0</sortpom-maven-plugin.version>
		<spring-boot.version>3.5.0</spring-boot.version>
		<spring-javaformat.version>0.0.45</spring-javaformat.version>
		<system-lambda.version>1.2.1</system-lambda.version>
		<testcontainers.version>1.21.0</testcontainers.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-bom</artifactId>
				<version>${micrometer.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-tracing-bom</artifactId>
				<version>${micrometer-tracing.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-bom</artifactId>
				<version>${netty.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit-jupiter.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-bom</artifactId>
				<version>${mockito.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.neo4j</groupId>
				<artifactId>neo4j-cypher-dsl-bom</artifactId>
				<version>${neo4j-cypher-dsl.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.neo4j.bolt</groupId>
				<artifactId>neo4j-bolt-connection-bom</artifactId>
				<version>${neo4j-bolt-connection.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-bom</artifactId>
				<version>${slf4j.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.github.stefanbirkner</groupId>
				<artifactId>system-lambda</artifactId>
				<version>${system-lambda.version}</version>
			</dependency>
			<dependency>
				<groupId>com.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>${opencsv.version}</version>
			</dependency>
			<dependency>
				<groupId>com.tngtech.archunit</groupId>
				<artifactId>archunit</artifactId>
				<version>${archunit.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.cdimascio</groupId>
				<artifactId>dotenv-java</artifactId>
				<version>${dotenv-java.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.xml.bind</groupId>
				<artifactId>jakarta.xml.bind-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctorj</artifactId>
				<version>${asciidoctorj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jooq</groupId>
				<artifactId>jooq</artifactId>
				<version>${jooq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.neo4j</groupId>
				<artifactId>cypher-v5-antlr-parser</artifactId>
				<version>${cypher-v5-antlr-parser.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<licenseSets>
							<licenseSet>
								<header>${maven.multiModuleProjectDirectory}/etc/license.tpl</header>
								<properties>
									<year>2025</year>
								</properties>
								<includes>
									<include>**</include>
								</includes>
								<excludes>
									<exclude>**/*.adoc</exclude>
									<exclude>**/*.conf</exclude>
									<exclude>**/*.csv</exclude>
									<exclude>**/*.cypher</exclude>
									<exclude>**/*.script</exclude>
									<exclude>**/*.tpl</exclude>
									<exclude>**/.env</exclude>
									<exclude>**/.snyk</exclude>
									<exclude>**/org.mockito.plugins.MockMaker</exclude>
									<exclude>LICENSE.txt</exclude>
									<exclude>**/README</exclude>
								</excludes>
							</licenseSet>
						</licenseSets>
						<dependencyEnforce>true</dependencyEnforce>
						<dependencyExceptionMessage>One or more dependencies are licensed under a non-approved license.</dependencyExceptionMessage>
						<dependencyPolicies>
							<dependencyPolicy>
								<type>LICENSE_URL</type>
								<rule>APPROVE</rule>
								<value>https://www.apache.org/licenses/LICENSE-2.0</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>Apache License, Version 2</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>Apache License, Version 2.0</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>The Apache Software License, Version 2.0</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>The Apache Software License, version 2.0</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>Apache-2.0</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>Apache License 2.0</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>Apache 2</value>
							</dependencyPolicy>
							<!-- Mainly due to Slf4j simple, which is used by ArchUnit in tests, and langchain4j in the text2cypher module -->
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>MIT License</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>MIT</value>
							</dependencyPolicy>
							<!-- Testing only -->
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>EPL 2.0</value>
							</dependencyPolicy>
							<dependencyPolicy>
								<type>LICENSE_NAME</type>
								<rule>APPROVE</rule>
								<value>GNU Library General Public License v2.1 or later</value>
							</dependencyPolicy>
						</dependencyPolicies>
						<mapping>
							<factories>SCRIPT_STYLE</factories>
						</mapping>
						<strictCheck>true</strictCheck>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.ekryd.sortpom</groupId>
					<artifactId>sortpom-maven-plugin</artifactId>
					<version>${sortpom-maven-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<keepBlankLines>true</keepBlankLines>
						<nrOfIndentSpace>-1</nrOfIndentSpace>
						<sortProperties>true</sortProperties>
						<sortDependencies>scope,groupId,artifactId</sortDependencies>
						<createBackupFile>false</createBackupFile>
						<expandEmptyElements>false</expandEmptyElements>
						<verifyFail>stop</verifyFail>
						<verifyFailOn>strict</verifyFailOn>
						<spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<configuration>
						<rules>
							<requireJavaVersion>
								<version>${java.version}</version>
							</requireJavaVersion>
							<requireMavenVersion>
								<version>${maven.version}</version>
							</requireMavenVersion>
							<DependencyConvergence />
						</rules>
					</configuration>
				</plugin>
				<plugin>
					<groupId>io.spring.javaformat</groupId>
					<artifactId>spring-javaformat-maven-plugin</artifactId>
					<version>${spring-javaformat.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<configuration>
						<excludes>**/module-info.java</excludes>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<configLocation>etc/checkstyle/config.xml</configLocation>
						<suppressionsLocation>etc/checkstyle/suppressions.xml</suppressionsLocation>
						<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
						<consoleOutput>true</consoleOutput>
						<failsOnError>true</failsOnError>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
						<dependency>
							<groupId>io.spring.javaformat</groupId>
							<artifactId>spring-javaformat-checkstyle</artifactId>
							<version>${spring-javaformat.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<forceLegacyJavacApi>true</forceLegacyJavacApi>
						<showWarnings>true</showWarnings>
						<compilerArgs>
							<arg>-Xlint:all,-options,-path,-processing,-classfile</arg>
							<arg>-Werror</arg>
							<arg>-parameters</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<append>true</append>
							</configuration>
						</execution>
						<execution>
							<id>pre-integration-test</id>
							<goals>
								<goal>prepare-agent-integration</goal>
							</goals>
							<configuration>
								<append>true</append>
								<destFile>${project.build.directory}/jacoco.exec</destFile>
							</configuration>
						</execution>
						<execution>
							<id>report-and-check</id>
							<goals>
								<goal>report</goal>
								<goal>check</goal>
							</goals>
							<phase>post-integration-test</phase>
							<configuration>
								<rules>
									<rule>
										<element>BUNDLE</element>
										<limits>
											<limit>
												<counter>INSTRUCTION</counter>
												<value>COVEREDRATIO</value>
												<minimum>${covered-ratio-instructions}</minimum>
											</limit>
											<limit>
												<counter>COMPLEXITY</counter>
												<value>COVEREDRATIO</value>
												<minimum>${covered-ratio-complexity}</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<argLine>@{argLine} -Xverify:all</argLine>
						<skipTests>${skipUTs}</skipTests>
						<systemPropertyVariables>
							<neo4j-jdbc.default-neo4j-image>${neo4j.image}</neo4j-jdbc.default-neo4j-image>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultEntries>true</addDefaultEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							</manifest>
							<manifestEntries>
								<Artifact-Id>${project.artifactId}</Artifact-Id>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<argLine>@{argLine} -Xverify:all</argLine>
						<skipTests>${skipTests}</skipTests>
						<skipITs>${skipITs}</skipITs>
						<systemPropertyVariables>
							<neo4j-jdbc.default-neo4j-image>${neo4j.image}</neo4j-jdbc.default-neo4j-image>
							<junit.platform.listeners.uid.tracking.enabled>true</junit.platform.listeners.uid.tracking.enabled>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<quiet>true</quiet>
						<detectOfflineLinks>false</detectOfflineLinks>
						<detectJavaApiLink>true</detectJavaApiLink>
						<release>${java.version}</release>
						<tags>
							<tag>
								<name>soundtrack</name>
								<placement>a</placement>
								<head>Soundtrack</head>
							</tag>
						</tags>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.basepom.maven</groupId>
					<artifactId>duplicate-finder-maven-plugin</artifactId>
					<version>${duplicate-finder-maven-plugin.version}</version>
					<configuration>
						<failBuildInCaseOfDifferentContentConflict>true</failBuildInCaseOfDifferentContentConflict>
						<failBuildInCaseOfEqualContentConflict>true</failBuildInCaseOfEqualContentConflict>
						<failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
						<checkCompileClasspath>true</checkCompileClasspath>
						<checkRuntimeClasspath>true</checkRuntimeClasspath>
						<checkTestClasspath>false</checkTestClasspath>
						<preferLocal>true</preferLocal>
						<useResultFile>true</useResultFile>
						<resultFile>${project.build.directory}/duplicate-finder-result.xml</resultFile>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
					<configuration>
						<skip>true</skip>
					</configuration>
					<executions>
						<execution>
							<id>prepare-release</id>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>bin/prepare-release.sh</executable>
								<arguments>
									<argument>${project.version}</argument>
									<!--suppress MavenModelInspection -->
									<argument>${isDryRun}</argument>
								</arguments>
							</configuration>
						</execution>
						<execution>
							<id>release-prepared</id>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>bin/update-previous-version.sh</executable>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.moditect</groupId>
					<artifactId>moditect-maven-plugin</artifactId>
					<version>${moditect-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>${asciidoctor-maven-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctorj</artifactId>
							<version>${asciidoctorj.version}</version>
						</dependency>
						<dependency>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctorj-pdf</artifactId>
							<version>${asciidoctorj.pdf.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>io.github.git-commit-id</groupId>
					<artifactId>git-commit-id-maven-plugin</artifactId>
					<version>${git-commit-id-maven-plugin.version}</version>
					<configuration>
						<generateGitPropertiesFile>false</generateGitPropertiesFile>
						<commitIdGenerationMode>full</commitIdGenerationMode>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jreleaser</groupId>
					<artifactId>jreleaser-maven-plugin</artifactId>
					<version>${jreleaser-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.siom79.japicmp</groupId>
					<artifactId>japicmp-maven-plugin</artifactId>
					<version>${japicmp-maven-plugin.version}</version>
					<configuration>
						<oldVersion>
							<dependency>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
								<version>${neo4j-jdbc.previous.version}</version>
								<type>jar</type>
							</dependency>
						</oldVersion>
						<newVersion>
							<file>
								<path>${project.build.directory}/${project.artifactId}-${project.version}.${project.packaging}</path>
							</file>
						</newVersion>
						<parameter>
							<ignoreMissingOldVersion>true</ignoreMissingOldVersion>
							<ignoreMissingClassesByRegularExpressions>
								<!-- Prior to shared Bolt, have been internal anyway, see below. -->
								<ignoreMissingClassesByRegularExpression>org.neo4j.jdbc.internal.bolt.response.*</ignoreMissingClassesByRegularExpression>
							</ignoreMissingClassesByRegularExpressions>
							<breakBuildBasedOnSemanticVersioning>true</breakBuildBasedOnSemanticVersioning>
							<overrideCompatibilityChangeParameters>
								<overrideCompatibilityChangeParameter>
									<!-- See https://github.com/siom79/japicmp/issues/201 -->
									<compatibilityChange>METHOD_NEW_DEFAULT</compatibilityChange>
									<binaryCompatible>true</binaryCompatible>
									<sourceCompatible>true</sourceCompatible>
									<semanticVersionLevel>MINOR</semanticVersionLevel>
								</overrideCompatibilityChangeParameter>
							</overrideCompatibilityChangeParameters>
							<excludes>
								<!-- This is not public API -->
								<exclude>org.neo4j.jdbc.internal.bolt</exclude>
								<!-- This is not even a public interface -->
								<exclude>org.neo4j.jdbc.Neo4jTransaction</exclude>
								<!-- This is shady stuff -->
								<exclude>org.neo4j.jdbc.translator.sparkcleaner.internal.shaded</exclude>
							</excludes>
						</parameter>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>cmp</goal>
							</goals>
							<phase>package</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.cyclonedx</groupId>
					<artifactId>cyclonedx-maven-plugin</artifactId>
					<version>${cyclonedx-maven-plugin.version}</version>
					<configuration>
						<skipNotDeployed>true</skipNotDeployed>
						<classifier>sbom-cyclonedx</classifier>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.basepom.maven</groupId>
				<artifactId>duplicate-finder-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.ekryd.sortpom</groupId>
				<artifactId>sortpom-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>verify</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>validate</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>validate</goal>
						</goals>
						<phase>validate</phase>
						<inherited>true</inherited>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<executions>
					<execution>
						<id>checkstyle-validation</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>validate</phase>
						<inherited>true</inherited>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.cyclonedx</groupId>
				<artifactId>cyclonedx-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>makeAggregateBom</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>prepare-release</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration combine.self="append">
							<skip>false</skip>
						</configuration>
					</execution>
					<execution>
						<id>release-prepared</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration combine.self="append">
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<goals>deploy</goals>
					<!--suppress MavenModelInspection -->
					<arguments>-Drelease -Dgpg.skip=${skipSigning} -DskipTests=${skipTestsDuringRelease} -DisDryRun=${dryRun} -Dsort.skip</arguments>
					<preparationGoals>clean exec:exec@prepare-release verify</preparationGoals>
					<completionGoals>compile exec:exec@release-prepared</completionGoals>
					<pushChanges>false</pushChanges>
					<localCheckout>true</localCheckout>
				</configuration>
			</plugin>
			<?SORTPOM IGNORE?>
			<plugin>
				<groupId>org.jreleaser</groupId>
				<artifactId>jreleaser-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
					<jreleaser>
						<project>
							<name>neo4j-jdbc-driver</name>
						</project>
						<release>
							<github>
								<skipTag>true</skipTag>
								<tagName>{{projectVersion}}</tagName>
								<releaseName>{{projectVersion}}</releaseName>
								<branch>main</branch>
								<changelog>
									<formatted>ALWAYS</formatted>
									<contentTemplate>etc/jreleaser/changelog.md.tpl</contentTemplate>
									<format>- {{commitShortHash}} {{commitTitle}}</format>
									<preset>conventional-commits</preset>
									<contributors>
										<format>-
											{{^contributorUsername}}{{contributorName}}{{/contributorUsername}}{{#contributorUsername}}@{{contributorUsername}}{{/contributorUsername}}
										</format>
									</contributors>
									<labelers>
										<labeler>
											<title>Bump</title>
											<label>dependabot</label>
											<order>-1</order>
										</labeler>
										<labeler>
											<title>build(deps)</title>
											<label>dependabot</label>
											<order>-2</order>
										</labeler>
										<labeler>
											<title>Fix</title>
											<label>fix</label>
										</labeler>
										<labeler>
											<title>fix</title>
											<label>fix</label>
										</labeler>
										<labeler>
											<title>Add support</title>
											<label>feat</label>
										</labeler>
										<labeler>
											<title>Document</title>
											<label>docs</label>
										</labeler>
										<labeler>
											<title>After release cleanup.</title>
											<label>maven-release</label>
										</labeler>
										<labeler>
											<title>[maven-release-plugin]</title>
											<label>maven-release</label>
										</labeler>
										<labeler>
											<body>nocl</body>
											<label>nocl</label>
										</labeler>
									</labelers>
									<replacers>
										<replacer>
											<search>(?:build\(deps\): )(.*)</search>
											<replace>$1</replace>
										</replacer>
										<replacer>
											<search>((?:GH-)(\d+) - )(.*)</search>
											<replace>$3 (#$2)</replace>
										</replacer>
									</replacers>
									<categories>
										<category>
											<key>features</key>
											<title>&#x1f680; Features</title>
											<labels>feat</labels>
											<order>10</order>
										</category>
										<category>
											<key>fixes</key>
											<title>&#x1f41b; Bug Fixes</title>
											<labels>fix</labels>
											<order>20</order>
										</category>
										<category>
											<key>changes</key>
											<title>&#x1f504;️ Refactorings</title>
											<labels>refactor</labels>
											<order>25</order>
										</category>
										<category>
											<key>docs</key>
											<title>&#x1f4dd; Documentation</title>
											<labels>docs</labels>
											<order>30</order>
										</category>
										<category>
											<key>tasks</key>
											<title>&#x1f9f0; Tasks</title>
											<labels>chore</labels>
											<order>35</order>
										</category>
										<category>
											<title>&#x1f9f9; Housekeeping</title>
											<labels>dependabot</labels>
											<order>70</order>
										</category>
										<category>
											<key>build</key>
											<title>&#x1f6e0; Build</title>
											<order>80</order>
										</category>
										<category>
											<title>nocl</title>
											<labels>nocl,maven-release</labels>
										</category>
									</categories>
									<hide>
										<categories>dependabot,nocl</categories>
										<contributors>GitHub,dependabot</contributors>
									</hide>
								</changelog>
							</github>
						</release>
						<distributions>
							<full-bundle>
								<type>SINGLE_JAR</type>
								<artifacts>
									<artifact>
										<path>dist/target/neo4j-jdbc-driver-{{projectVersion}}.zip</path>
									</artifact>
								</artifacts>
							</full-bundle>
						</distributions>
						<announce>
							<webhooks>
								<slack>
									<active>RELEASE</active>
									<structuredMessage>true</structuredMessage>
								</slack>
							</webhooks>
						</announce>
					</jreleaser>
				</configuration>
			</plugin>
			<?SORTPOM RESUME?>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>no-release</id>
			<!--
			According to https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin
			skipNexusStagingDeployMojo may not be set to true in the last reactor module. Because we don't
			want to deploy our last module, nor a dummy module, we simply omit the relevant modules when
			a deploy is in progress.
			-->
			<activation>
				<property>
					<name>!release</name>
				</property>
			</activation>
			<modules>
				<module>neo4j-jdbc-test-results</module>
			</modules>
		</profile>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>sonar</id>
								<goals>
									<goal>sonar</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>fast</id>
			<activation>
				<property>
					<name>fast</name>
				</property>
			</activation>
			<properties>
				<asciidoctor.skip>true</asciidoctor.skip>
				<checkstyle.skip>true</checkstyle.skip>
				<cyclonedx.skip>true</cyclonedx.skip>
				<docker.skip>true</docker.skip>
				<invoker.skip>true</invoker.skip>
				<jacoco.skip>true</jacoco.skip>
				<japicmp.skip>true</japicmp.skip>
				<jqassistant.skip>true</jqassistant.skip>
				<license.skip>true</license.skip>
				<maven.javadoc.skip>true</maven.javadoc.skip>
				<pmd.skip>true</pmd.skip>
				<skipTests>true</skipTests>
				<sort.skip>true</sort.skip>
				<spring-javaformat.skip>true</spring-javaformat.skip>
			</properties>
		</profile>
		<profile>
			<id>deploy_to_central</id>
			<activation>
				<property>
					<name>deploy_to_central</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jreleaser</groupId>
						<artifactId>jreleaser-maven-plugin</artifactId>
						<configuration combine.self="append">
							<skip>false</skip>
							<jreleaser>
								<project>
									<!-- Setting this explicitly to the JReleaser env variables spares us from checking out the tag. -->
									<!--suppress MavenModelInspection -->
									<version>${env.JRELEASER_PROJECT_VERSION}</version>
								</project>
								<signing>
									<active>ALWAYS</active>
									<mode>COMMAND</mode>
									<command>
										<homeDir>~/.gnupg</homeDir>
									</command>
								</signing>
								<deploy>
									<maven>
										<mavenCentral>
											<neo4j_jdbc>
												<active>ALWAYS</active>
												<url>https://central.sonatype.com/api/v1/publisher</url>
												<namespace>org.neo4j</namespace>
												<verifyPom>false</verifyPom>
												<applyMavenCentralRules>true</applyMavenCentralRules>
												<stagingRepositories>
													<stagingRepository>${project.build.directory}/artifacts</stagingRepository>
												</stagingRepositories>
											</neo4j_jdbc>
										</mavenCentral>
									</maven>
								</deploy>
							</jreleaser>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
